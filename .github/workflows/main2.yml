name: Kernel Build

on:
  push:
    branches:
      - main  # Puedes cambiar "main" por cualquier rama
  workflow_dispatch:
    inputs:
      model:
        description: 'Modelo del dispositivo (ej: x1s, y2s, z3s)'
        required: true
        default: 'r8s'
      ksu:
        description: 'Incluir KernelSU (y/N)'
        required: false
        default: 'y'
      recovery:
        description: 'Compilar para recovery (y/N)'
        required: false
        default: 'n'
      ccache:
        description: 'Usar ccache (y/N)'
        required: false
        default: 'n'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3

    - name: Instalar dependencias necesarias
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential ccache curl flex git libssl-dev \
          libncurses5-dev make python3 unzip wget zip \
          gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \
          libelf-dev libncurses-dev

    - name: Dar permisos al script de build
      run: chmod +x ./build.sh

    - name: Ejecutar build.sh
      run: |
        ./build.sh \
          --model ${{ github.event.inputs.model }} \
          --ksu ${{ github.event.inputs.ksu }} \
          --recovery ${{ github.event.inputs.recovery }} \
          --ccache ${{ github.event.inputs.ccache }}

    - name: Buscar archivo ZIP generado
      id: find_zip
      run: |
        ZIP_FILE=$(find build/out/${{ github.event.inputs.model }} -name "*.zip" | head -n 1)
        echo "ZIP_PATH=$ZIP_FILE" >> $GITHUB_ENV

    - name: Subir artefacto
      if: env.ZIP_PATH != ''
      uses: actions/upload-artifact@v3
      with:
        name: Kernel-${{ github.event.inputs.model }}
        path: ${{ env.ZIP_PATH }}
